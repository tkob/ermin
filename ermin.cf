TopDefinitions. Top ::= [Def] ;

TypeDef.            Def ::= "type" Ident "=" Type ;
CodeDef.            Def ::= "code" Ident "=" [Code] ;
IdentifierDef.      Def ::= "identifier" Ident "=" IdentifierType ;
EntityDef.          Def ::= "entity" Ident "identified" "by" [Ident] [Attribute] ;
KeyOnlyEntityDef.   Def ::= "entity" Ident "identified" "by" [Ident] ;
RelationshipDef.    Def ::= "relationship" Ident ":" [RelationshipType] ;
AbstractProcessDef. Def ::= "abstract" "process" Ident "(" [Argument] ")" [Statement] ;
terminator nonempty Def "" ;
separator nonempty Ident "*" ;

CharType.                  Type ::= "char" "(" Integer ")" ;
VarCharType.               Type ::= "varchar" "(" Integer ")" ;
ClobType.                  Type ::= "clob" ;
BlobType.                  Type ::= "blob" ;
DecimalType.               Type ::= "decimal" ;
DecimalPrecisionType.      Type ::= "decimal" "(" Integer ")" ;
DecimalPrecisionScaleType. Type ::= "decimal" "(" Integer "," Integer ")" ;
IntegerType.               Type ::= "integer" ;
DateType.                  Type ::= "date" ;
IdentType.                 Type ::= Ident ; -- identifier can refer to type or code

CharIdType.    IdentifierType ::= "char" "(" Integer ")" ;
VarCharIdType. IdentifierType ::= "varchar" "(" Integer ")" ;
IntegerIdType. IdentifierType ::= "integer" ;

OneRelationshipType.               RelationshipType ::= "one" Ident ;
ZeroOrOneRelationshipType.         RelationshipType ::= "zero" "or" "one" Ident ;
ZeroOrMoreRelationshipType.        RelationshipType ::= "zero" "or" "more" Ident ;
OneOreMoreRelationshipType.        RelationshipType ::= "one" "or" "more" Ident ;
NumericOneRelationshipType.        RelationshipType ::= "1" Ident ;
NumericZeroOrOneRelationshipType.  RelationshipType ::= "0,1" Ident ;
NumericZeroOrMoreRelationshipType. RelationshipType ::= "0.." Ident ;
NumericOneOreMoreRelationshipType. RelationshipType ::= "1.." Ident ;
DefaultRelationshipType.           RelationshipType ::= Ident ;
separator nonempty RelationshipType "*" ;

StringCode. Code ::= String ;
terminator nonempty Code "" ;

-- KeyAttribute.       Attribute ::= "key" Ident ":" Type ;
MandatoryAttribute. Attribute ::= "attribute" Ident ":" Type ;
OptionalAttribute.  Attribute ::= "optional" Ident ":" Type ;
UniqueAttribute.    Attribute ::= "unique" Ident ":" Type ;
terminator nonempty Attribute "" ;

NewEntityArgument.      Argument ::= Ident "=" "new" Ident ;
ExistingEntityArgument. Argument ::= Ident "in" Ident ;
separator nonempty Argument "," ;

InsertStatement. Statement ::= Ident "+=" Exp ;
DeleteStatement. Statement ::= Ident "-=" Exp ;
UpdateStatement. Statement ::= Ident "~=" "<" [Exp] ">" ;
separator nonempty Statement "" ;

VarExp.   Exp ::= Ident ;
TupleExp. Exp ::= "<" [Exp] ">" ;
separator nonempty Exp "," ;

comment "--" ;
comment "{--" "--}" ;

