TopDefinitions. Top ::= [Def] ;

TypeDef.               Def ::= "type" Ident "=" Type ;
CodeDef.               Def ::= "code" Ident "=" [Code] ;
EntityDef.             Def ::= "entity" Ident "identified" "by" Ident ":" Type [Attribute] ;
KeyOnlyEntityDef.      Def ::= "entity" Ident "identified" "by" Ident ":" Type ;
ChildEntityDef.        Def ::= "entity" Ident "belongs" "to" [Ident] "identified" "by" Ident ":" Type [Attribute] ;
KeyOnlyChildEntityDef. Def ::= "entity" Ident "belongs" "to" [Ident] "identified" "by" Ident ":" Type ;
RelationshipDef.       Def ::= "relationship" Ident ":" [RelationshipType] ;
AbstractProcessDef.    Def ::= "abstract" "process" Ident "(" [Argument] ")" "do" [Statement] "end" ;
GuardedProcessDef.     Def ::= "abstract" "process" Ident "(" [Argument] ")" "guard" [BoolExp] "do" [Statement] "end" ;
terminator nonempty    Def "" ;
separator nonempty Ident "*" ;

CharType.                  Type ::= "char" "(" Integer ")" ;
VarCharType.               Type ::= "varchar" "(" Integer ")" ;
ClobType.                  Type ::= "clob" ;
BlobType.                  Type ::= "blob" ;
DecimalType.               Type ::= "decimal" ;
DecimalPrecisionType.      Type ::= "decimal" "(" Integer ")" ;
DecimalPrecisionScaleType. Type ::= "decimal" "(" Integer "," Integer ")" ;
IntegerType.               Type ::= "integer" ;
DateType.                  Type ::= "date" ;
IdentType.                 Type ::= Ident ; -- identifier can refer to type or code

OneRelationshipType.               RelationshipType ::= "one" Ident ;
ZeroOrOneRelationshipType.         RelationshipType ::= "zero" "or" "one" Ident ;
ZeroOrMoreRelationshipType.        RelationshipType ::= "zero" "or" "more" Ident ;
OneOreMoreRelationshipType.        RelationshipType ::= "one" "or" "more" Ident ;
NumericOneRelationshipType.        RelationshipType ::= "1" Ident ;
NumericZeroOrOneRelationshipType.  RelationshipType ::= "0,1" Ident ;
NumericZeroOrMoreRelationshipType. RelationshipType ::= "0.." Ident ;
NumericOneOreMoreRelationshipType. RelationshipType ::= "1.." Ident ;
DefaultRelationshipType.           RelationshipType ::= Ident ;
separator nonempty RelationshipType "*" ;

StringCode. Code ::= String ;
terminator nonempty Code "" ;

MandatoryAttribute. Attribute ::= "attribute" Ident ":" Type ;
OptionalAttribute.  Attribute ::= "optional" Ident ":" Type ;
UniqueAttribute.    Attribute ::= "unique" Ident ":" Type ;
terminator nonempty Attribute "" ;

NewEntityArgument.      Argument ::= Ident "=" "new" Ident ;
ExistingEntityArgument. Argument ::= Ident "in" Ident ;
separator nonempty Argument "," ;

InsertStatement. Statement ::= Ident "+=" Exp ;
DeleteStatement. Statement ::= Ident "-=" Exp ;
UpdateStatement. Statement ::= Ident "~=" "<" [Exp] ">" ;
separator nonempty Statement "" ;

VarExp.   Exp ::= Ident ;
TupleExp. Exp ::= "<" [Exp] ">" ;
separator nonempty Exp "," ;

UniversalBoolExp. BoolExp  ::= "for" "all" [Decl] BoolExp ;
EqualBoolExp.     BoolExp1 ::= Exp "=" Exp ;
NotEqualBoolExp.  BoolExp1 ::= Exp "!=" Exp ;
coercions BoolExp 1 ;
terminator nonempty BoolExp "" ;

InDecl. Decl ::= Ident ":" Ident ;
separator nonempty Decl "," ;

comment "--" ;
comment "{-" "-}" ;

